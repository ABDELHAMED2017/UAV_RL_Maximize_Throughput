# !usr/bin/env python
# -*- coding:utf-8 -*-
# Author:LiuQian,time:2018/7/30

import numpy as np
import  tensorflow as tf

from numpy.linalg import cholesky
import matplotlib.pyplot as plt

action_space = ['01-01', '01-02', '01-03', '01-04', '01-05', '01-06', '01-07', '01-08', '01-09', '01-10', '01-11', '01-12', '01-13', '01-14', '01-15', '01-16', '01-17', '01-18', '01-19', '01-20', '01-21', '01-22', '01-23', '01-24', '01-25',
                '02-01', '02-02', '02-03', '02-04', '02-05', '02-06', '02-07', '02-08', '02-09', '02-10', '02-11', '02-12', '02-13', '02-14', '02-15', '02-16', '02-17', '02-18', '02-19', '02-20', '02-21', '02-22', '02-23', '02-24', '02-25',
                '03-01', '03-02', '03-03', '03-04', '03-05', '03-06', '03-07', '03-08', '03-09', '03-10', '03-11', '03-12', '03-13', '03-14', '03-15', '03-16', '03-17', '03-18', '03-19', '03-20', '03-21', '03-22', '03-23', '03-24', '03-25',
                '04-01', '04-02', '04-03', '04-04', '04-05', '04-06', '04-07', '04-08', '04-09', '04-10', '04-11', '04-12', '04-13', '04-14', '04-15', '04-16', '04-17', '04-18', '04-19', '04-20', '04-21', '04-22', '04-23', '04-24', '04-25',
                '05-01', '05-02', '05-03', '05-04', '05-05', '05-06', '05-07', '05-08', '05-09', '05-10', '05-11', '05-12', '05-13', '05-14', '05-15', '05-16', '05-17', '05-18', '05-19', '05-20', '05-21', '05-22', '05-23', '05-24', '05-25',
                '06-01', '06-02', '06-03', '06-04', '06-05', '06-06', '06-07', '06-08', '06-09', '06-10', '06-11', '06-12', '06-13', '06-14', '06-15', '06-16', '06-17', '06-18', '06-19', '06-20', '06-21', '06-22', '06-23', '06-24', '06-25',
                '07-01', '07-02', '07-03', '07-04', '07-05', '07-06', '07-07', '07-08', '07-09', '07-10', '07-11', '07-12', '07-13', '07-14', '07-15', '07-16', '07-17', '07-18', '07-19', '07-20', '07-21', '07-22', '07-23', '07-24', '07-25',
                '08-01', '08-02', '08-03', '08-04', '08-05', '08-06', '08-07', '08-08', '08-09', '08-10', '08-11', '08-12', '08-13', '08-14', '08-15', '08-16', '08-17', '08-18', '08-19', '08-20', '08-21', '08-22', '08-23', '08-24', '08-25',
                '09-01', '09-02', '09-03', '09-04', '09-05', '09-06', '09-07', '09-08', '09-09', '09-10', '09-11', '09-12', '09-13', '09-14', '09-15', '09-16', '09-17', '09-18', '09-19', '09-20', '09-21', '09-22', '09-23', '09-24', '09-25',
                '10-01', '10-02', '10-03', '10-04', '10-05', '10-06', '10-07', '10-08', '10-09', '10-10', '10-11', '10-12', '10-13', '10-14', '10-15', '10-16', '10-17', '10-18', '10-19', '10-20', '10-21', '10-22', '10-23', '10-24', '10-25',
                '11-01', '11-02', '11-03', '11-04', '11-05', '11-06', '11-07', '11-08', '11-09', '11-10', '11-11', '11-12', '11-13', '11-14', '11-15', '11-16', '11-17', '11-18', '11-19', '11-20', '11-21', '11-22', '11-23', '11-24', '11-25',
                '12-01', '12-02', '12-03', '12-04', '12-05', '12-06', '12-07', '12-08', '12-09', '12-10', '12-11', '12-12', '12-13', '12-14', '12-15', '12-16', '12-17', '12-18', '12-19', '12-20', '12-21', '12-22', '12-23', '12-24', '12-25',
                '13-01', '13-02', '13-03', '13-04', '13-05', '13-06', '13-07', '13-08', '13-09', '13-10', '13-11', '13-12', '13-13', '13-14', '13-15', '13-16', '13-17', '13-18', '13-19', '13-20', '13-21', '13-22', '13-23', '13-24', '13-25',
                '14-01', '14-02', '14-03', '14-04', '14-05', '14-06', '14-07', '14-08', '14-09', '14-10', '14-11', '14-12', '14-13', '14-14', '14-15', '14-16', '14-17', '14-18', '14-19', '14-20', '14-21', '14-22', '14-23', '14-24', '14-25',
                '15-01', '15-02', '15-03', '15-04', '15-05', '15-06', '15-07', '15-08', '15-09', '15-10', '15-11', '15-12', '15-13', '15-14', '15-15', '15-16', '15-17', '15-18', '15-19', '15-20', '15-21', '15-22', '15-23', '15-24', '15-25']
A = ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25']

# for i in range(len(action_space)):
#     print("选择服务用户为：", action_space[i][0:2])
#     print("飞往的无人机固定点为:", action_space[i][3:5])
#     print("\n")
#
# print(action_space[50][0:2])
# a = action_space[50][3:5]
# if a in A:
#     print(A.index(a))

# user_center = np.array([[380, 100], [180, 140], [100, 260], [500, 260], [340, 340],
#                                      [140, 380], [60, 540], [340, 580], [940, 20], [620, 100],
#                                      [860, 140], [740, 300], [580, 420], [980, 420], [780, 500]])
#
# a = np.hstack((np.array([[2, 3]]), np.array([[380, 100], [180, 140], [100, 260], [500, 260], [340, 340],
#                                      [140, 380], [60, 540], [340, 580], [940, 20], [620, 100],
#                                      [860, 140], [740, 300], [580, 420], [980, 420], [780, 500]]).reshape(1, 30)))
#
# s_ = np.hstack((np.array([[40, 40]]), (user_center).reshape(1, 30)))
#
# print("s_:", s_)
# print(np.shape(s_))
# print(s_[0][7])
#
# print("a:", a)
# print(np.shape(a))
# print(a[0, 7])


# b = [[[1,2,3,4,5,6,7,8,9,0]]]
# print(b)
# print(type(b))
# print(np.shape(b))
# c = np.reshape(b, 10)
# print(c)
# print(type(c))
# print(np.shape(c))

#
# point = []
# point.append(list(user_center[5, :]))
# print("point:", point)
#
# print(point[0][0])

# q_eval = [[100, 200, 300, 346, 124, 367], [200, 200, 300, 346, 124, 367], [500, 200, 300, 346, 124, 367]]
#
# a = np.array(q_eval).argmax(axis=1)           # 按行找最大值索引
# print(a)
#
# q_next = [[100, 200, 300, 346, 124, 367], [200, 200, 300, 346, 124, 367], [500, 200, 300, 346, 124, 367]]
#
# reward = [[100], [200], [300]]
# print(np.shape(reward))
#
# q_target = np.zeros([3, 6])
# print(q_target)
#
# for i in range(3):
#     for j in range(6):
#         q_target[i, j] = reward[i] + 0.9 * q_next[i][a[i]]


sampleNo = 1000
# 一维正态分布

mu = 3
sigma = 0.1
np.random.seed(1)
a = np.random.normal(5, 0.1, 1)
b = np.random.normal(180, 1, 1)
print("速度：", a)
print("角度：", b)
s = np.random.normal(mu, sigma, sampleNo)
plt.subplot(141)
plt.hist(s, 30, normed=True)


plt.hist(s, 30, normed=True)



# # 二维正态分布
# mu = np.array([[1, 5]])
# Sigma = np.array([[1, 0.5], [1.5, 3]])
# R = cholesky(Sigma)
# s = np.dot(np.random.randn(sampleNo, 2), R) + mu
# plt.subplot(144)
# # 注意绘制的是散点图，而不是直方图
# plt.plot(s[:, 0], s[:, 1], '+')
# plt.show()



























